
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package parrot.backend.analizadores;

import java_cup.runtime.*;
import parrot.backend.analizadores.sym2;
import parrot.backend.xml.ImportadorXML;
import parrot.backend.sitioweb.*;
import parrot.backend.paginaweb.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser2 extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym2.class;
}

  /** Default constructor. */
  @Deprecated
  public parser2() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser2(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser2(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\074\000\002\002\004\000\002\002\003\000\002\013" +
    "\010\000\002\013\007\000\002\014\010\000\002\015\005" +
    "\000\002\016\005\000\002\017\005\000\002\020\005\000" +
    "\002\021\005\000\002\022\005\000\002\023\004\000\002" +
    "\023\003\000\002\024\013\000\002\024\012\000\002\024" +
    "\012\000\002\024\011\000\002\025\007\000\002\026\005" +
    "\000\002\027\005\000\002\030\005\000\002\031\005\000" +
    "\002\032\005\000\002\033\004\000\002\033\003\000\002" +
    "\034\006\000\002\034\006\000\002\034\006\000\002\034" +
    "\006\000\002\034\006\000\002\012\005\000\002\003\007" +
    "\000\002\003\006\000\002\003\006\000\002\003\005\000" +
    "\002\035\005\000\002\036\005\000\002\004\007\000\002" +
    "\004\006\000\002\004\006\000\002\004\005\000\002\005" +
    "\010\000\002\005\007\000\002\037\005\000\002\040\005" +
    "\000\002\041\003\000\002\041\003\000\002\041\003\000" +
    "\002\041\003\000\002\042\005\000\002\043\005\000\002" +
    "\006\007\000\002\007\006\000\002\044\005\000\002\045" +
    "\004\000\002\045\003\000\002\046\005\000\002\010\004" +
    "\000\002\010\003\000\002\011\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\244\000\004\004\005\001\002\000\004\002\246\001" +
    "\002\000\004\006\010\001\002\000\004\002\000\001\002" +
    "\000\004\076\040\001\002\000\004\070\036\001\002\000" +
    "\004\010\012\001\002\000\004\070\034\001\002\000\004" +
    "\014\015\001\002\000\004\016\020\001\002\000\004\075" +
    "\016\001\002\000\004\015\017\001\002\000\004\016\ufffa" +
    "\001\002\000\004\075\032\001\002\000\004\012\022\001" +
    "\002\000\004\070\030\001\002\000\004\062\024\001\002" +
    "\000\004\072\026\001\002\000\004\076\ufffd\001\002\000" +
    "\004\063\027\001\002\000\004\076\ufff7\001\002\000\004" +
    "\013\031\001\002\000\004\062\ufff8\001\002\000\004\017" +
    "\033\001\002\000\004\012\ufff9\001\002\000\004\011\035" +
    "\001\002\000\004\014\ufffb\001\002\000\004\007\037\001" +
    "\002\000\004\010\ufffc\001\002\000\006\020\041\077\043" +
    "\001\002\000\004\006\053\001\002\000\006\020\041\077" +
    "\047\001\002\000\004\005\045\001\002\000\006\020\ufff5" +
    "\077\ufff5\001\002\000\004\002\ufffe\001\002\000\006\020" +
    "\ufff6\077\ufff6\001\002\000\004\005\050\001\002\000\004" +
    "\002\uffff\001\002\000\004\010\227\001\002\000\004\100" +
    "\056\001\002\000\004\070\054\001\002\000\004\007\055" +
    "\001\002\000\004\010\uffef\001\002\000\006\030\060\101" +
    "\061\001\002\000\006\030\060\101\216\001\002\000\004" +
    "\006\077\001\002\000\004\102\063\001\002\000\006\030" +
    "\uffe9\101\uffe9\001\002\000\006\060\065\103\066\001\002" +
    "\000\006\060\uffc7\103\uffc7\001\002\000\004\072\074\001" +
    "\002\000\004\021\073\001\002\000\006\060\065\103\071" +
    "\001\002\000\006\060\uffc8\103\uffc8\001\002\000\004\021" +
    "\072\001\002\000\006\020\ufff3\077\ufff3\001\002\000\006" +
    "\020\ufff1\077\ufff1\001\002\000\004\061\075\001\002\000" +
    "\006\060\uffc6\103\uffc6\001\002\000\014\022\111\042\106" +
    "\044\113\054\107\056\105\001\002\000\004\070\100\001" +
    "\002\000\004\007\101\001\002\000\014\022\uffe3\042\uffe3" +
    "\044\uffe3\054\uffe3\056\uffe3\001\002\000\004\031\215\001" +
    "\002\000\004\031\214\001\002\000\004\031\213\001\002" +
    "\000\004\026\200\001\002\000\004\034\146\001\002\000" +
    "\004\046\115\001\002\000\004\031\163\001\002\000\004" +
    "\034\146\001\002\000\004\031\144\001\002\000\004\046" +
    "\115\001\002\000\006\036\122\050\121\001\002\000\004" +
    "\072\116\001\002\000\004\047\117\001\002\000\006\036" +
    "\uffd6\050\uffd6\001\002\000\004\050\121\001\002\000\004" +
    "\071\137\001\002\000\012\064\133\065\135\066\131\067" +
    "\134\001\002\000\004\052\124\001\002\000\004\071\127" +
    "\001\002\000\004\045\126\001\002\000\004\031\uffd7\001" +
    "\002\000\004\053\130\001\002\000\006\045\uffcf\055\uffcf" +
    "\001\002\000\004\037\uffd2\001\002\000\004\037\136\001" +
    "\002\000\004\037\uffd4\001\002\000\004\037\uffd3\001\002" +
    "\000\004\037\uffd1\001\002\000\012\023\uffd5\040\uffd5\043" +
    "\uffd5\050\uffd5\001\002\000\004\051\140\001\002\000\004" +
    "\052\uffd0\001\002\000\004\052\124\001\002\000\004\045" +
    "\143\001\002\000\004\031\uffd8\001\002\000\006\030\uffe6" +
    "\101\uffe6\001\002\000\010\023\154\036\122\040\151\001" +
    "\002\000\004\072\147\001\002\000\004\035\150\001\002" +
    "\000\012\023\uffde\036\uffde\040\uffde\043\uffde\001\002\000" +
    "\004\074\161\001\002\000\006\023\157\040\151\001\002" +
    "\000\004\023\155\001\002\000\004\031\uffdf\001\002\000" +
    "\004\031\uffe1\001\002\000\004\023\160\001\002\000\004" +
    "\031\uffe0\001\002\000\004\031\uffe2\001\002\000\004\041" +
    "\162\001\002\000\006\023\uffdd\043\uffdd\001\002\000\006" +
    "\030\uffe7\101\uffe7\001\002\000\004\050\121\001\002\000" +
    "\004\052\124\001\002\000\004\055\167\001\002\000\004" +
    "\031\uffce\001\002\000\010\036\122\040\151\043\173\001" +
    "\002\000\006\040\151\043\176\001\002\000\004\043\174" +
    "\001\002\000\004\031\uffd9\001\002\000\004\031\uffdb\001" +
    "\002\000\004\043\177\001\002\000\004\031\uffda\001\002" +
    "\000\004\031\uffdc\001\002\000\004\070\211\001\002\000" +
    "\004\060\203\001\002\000\006\057\210\060\203\001\002" +
    "\000\004\072\205\001\002\000\006\057\uffca\060\uffca\001" +
    "\002\000\004\061\206\001\002\000\006\057\uffc9\060\uffc9" +
    "\001\002\000\006\057\uffcb\060\uffcb\001\002\000\004\031" +
    "\uffcd\001\002\000\004\027\212\001\002\000\004\060\uffcc" +
    "\001\002\000\006\030\uffe8\101\uffe8\001\002\000\006\030" +
    "\uffe4\101\uffe4\001\002\000\006\030\uffe5\101\uffe5\001\002" +
    "\000\004\102\220\001\002\000\006\030\uffea\101\uffea\001" +
    "\002\000\006\060\065\103\221\001\002\000\004\021\225" +
    "\001\002\000\006\060\065\103\223\001\002\000\004\021" +
    "\224\001\002\000\006\020\ufff4\077\ufff4\001\002\000\006" +
    "\020\ufff2\077\ufff2\001\002\000\004\014\233\001\002\000" +
    "\004\070\230\001\002\000\004\011\231\001\002\000\004" +
    "\014\uffee\001\002\000\004\016\236\001\002\000\004\075" +
    "\234\001\002\000\004\015\235\001\002\000\004\016\uffed" +
    "\001\002\000\004\075\244\001\002\000\004\012\240\001" +
    "\002\000\004\070\242\001\002\000\004\100\ufff0\001\002" +
    "\000\004\013\243\001\002\000\004\100\uffeb\001\002\000" +
    "\004\017\245\001\002\000\004\012\uffec\001\002\000\004" +
    "\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\244\000\006\002\003\013\005\001\001\000\002\001" +
    "\001\000\006\014\006\015\010\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\016\012\001" +
    "\001\000\002\001\001\000\004\017\013\001\001\000\004" +
    "\020\020\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\021\022\001\001" +
    "\000\002\001\001\000\004\022\024\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\023\041\024\043\001" +
    "\001\000\006\025\051\026\050\001\001\000\004\024\045" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\027\225\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\033\056" +
    "\034\061\001\001\000\004\034\216\001\001\000\004\012" +
    "\075\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\010\066\011\063\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\011\067\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\003\103" +
    "\004\107\005\111\006\101\007\102\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\044\200\001" +
    "\001\000\004\035\167\001\001\000\004\037\163\001\001" +
    "\000\002\001\001\000\004\035\144\001\001\000\002\001" +
    "\001\000\004\037\113\001\001\000\006\040\117\042\122" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\042\140\001\001\000\002\001\001\000\004" +
    "\041\131\001\001\000\004\043\124\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\043" +
    "\141\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\036\152\040\151\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\036\155\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\042\164\001\001\000\004\043\165" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\036" +
    "\171\040\170\001\001\000\004\036\174\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\045\201\046\203\001\001\000\004\046\206\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\010\221\011\063\001\001\000\002\001\001" +
    "\000\004\011\067\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\030\231\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\031" +
    "\236\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\032\240\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser2$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser2$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser2$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




	private ImportadorXML ixml = null;
	private SitioWeb sw = null;
	private PaginaWeb pw = null;
	private int internalOption = 0;

	// Connect this parser to a scanner!
	public parser2(Lexer2 lex, ImportadorXML ixml) {
		super(lex);
		this.ixml = ixml;
	}

        public void syntax_error(Symbol s) {
            System.out.println("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
        }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser2$actions {
  private final parser2 parser;

  /** Constructor */
  CUP$parser2$actions(parser2 parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser2$do_action_part00000000(
    int                        CUP$parser2$act_num,
    java_cup.runtime.lr_parser CUP$parser2$parser,
    java.util.Stack            CUP$parser2$stack,
    int                        CUP$parser2$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser2$result;

      /* select the action based on the action number */
      switch (CUP$parser2$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= main EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String start_val = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = start_val;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser2$parser.done_parsing();
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // main ::= sitioWeb 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("main",0, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // sitioWeb ::= SITIO_WEB_ABIERTO parametros1 PAGINAS_ABIERTO paginas PAGINAS_CERRADO SITIO_WEB_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("sitioWeb",9, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-5)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // sitioWeb ::= SITIO_WEB_ABIERTO parametros1 PAGINAS_ABIERTO PAGINAS_CERRADO SITIO_WEB_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("sitioWeb",9, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // parametros1 ::= id usuarioCreacion fechaCreacion fechaModificacion usuarioModificacion path 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("parametros1",10, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-5)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // id ::= ID_ABIERTO IDENTIFICADOR ID_CERRADO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e1;ixml.setSitioWeb(RESULT, 1);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("id",11, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // usuarioCreacion ::= USUARIO_CREACION_ABIERTO IDENTIFICADOR USUARIO_CREACION_CERRADO 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e2;ixml.setSitioWeb(RESULT, 2);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("usuarioCreacion",12, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // fechaCreacion ::= FECHA_CREACION_ABIERTO FECHA_PARAMETRO FECHA_CREACION_CERRADO 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e3; ixml.setSitioWeb(RESULT, 3);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("fechaCreacion",13, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // fechaModificacion ::= FECHA_MODIFICACION_ABIERTO FECHA_PARAMETRO FECHA_MODIFICACION_CERRADO 
            {
              String RESULT =null;
		int e4left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e4right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e4 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e4; ixml.setSitioWeb(RESULT, 4);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("fechaModificacion",14, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // usuarioModificacion ::= USUARIO_MODIFICACION_ABIERTO IDENTIFICADOR USUARIO_MODIFICACION_CERRADO 
            {
              String RESULT =null;
		int e5left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e5right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e5 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e5; ixml.setSitioWeb(RESULT, 5);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("usuarioModificacion",15, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // path ::= PATH_ABIERTO TEXTO_PARAMETRO PATH_CERRADO 
            {
              String RESULT =null;
		int e6left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e6right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e6 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e6; ixml.setSitioWeb(RESULT, 6);
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("path",16, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // paginas ::= paginas pagina 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("paginas",17, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // paginas ::= pagina 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("paginas",17, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // pagina ::= PAGINA_WEB_ABIERTO parametros2 COMPONENTES_ABIERTO componentes COMPONENTES_CERRADO ETIQUETAS_ABIERTO etiquetas ETIQUETAS_CERRADO PAGINA_WEB_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("pagina",18, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-8)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // pagina ::= PAGINA_WEB_ABIERTO parametros2 COMPONENTES_ABIERTO COMPONENTES_CERRADO ETIQUETAS_ABIERTO etiquetas ETIQUETAS_CERRADO PAGINA_WEB_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("pagina",18, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-7)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // pagina ::= PAGINA_WEB_ABIERTO parametros2 COMPONENTES_ABIERTO componentes COMPONENTES_CERRADO ETIQUETAS_ABIERTO ETIQUETAS_CERRADO PAGINA_WEB_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("pagina",18, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-7)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // pagina ::= PAGINA_WEB_ABIERTO parametros2 COMPONENTES_ABIERTO COMPONENTES_CERRADO ETIQUETAS_ABIERTO ETIQUETAS_CERRADO PAGINA_WEB_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("pagina",18, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-6)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // parametros2 ::= id2 usuarioCreacion2 fechaCreacion2 fechaModificacion2 usuarioModificacion2 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("parametros2",19, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // id2 ::= ID_ABIERTO IDENTIFICADOR ID_CERRADO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e1;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("id2",20, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // usuarioCreacion2 ::= USUARIO_CREACION_ABIERTO IDENTIFICADOR USUARIO_CREACION_CERRADO 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e2;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("usuarioCreacion2",21, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // fechaCreacion2 ::= FECHA_CREACION_ABIERTO FECHA_PARAMETRO FECHA_CREACION_CERRADO 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e3;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("fechaCreacion2",22, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // fechaModificacion2 ::= FECHA_MODIFICACION_ABIERTO FECHA_PARAMETRO FECHA_MODIFICACION_CERRADO 
            {
              String RESULT =null;
		int e4left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e4right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e4 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e4;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("fechaModificacion2",23, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // usuarioModificacion2 ::= USUARIO_MODIFICACION_ABIERTO IDENTIFICADOR USUARIO_MODIFICACION_CERRADO 
            {
              String RESULT =null;
		int e5left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int e5right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		String e5 = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = e5;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("usuarioModificacion2",24, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // componentes ::= componentes componente 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("componentes",25, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // componentes ::= componente 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("componentes",25, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // componente ::= COMPONENTE_ABIERTO id3 titulo COMPONENTE_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("componente",26, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // componente ::= COMPONENTE_ABIERTO id3 parrafo COMPONENTE_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("componente",26, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // componente ::= COMPONENTE_ABIERTO id3 imagen COMPONENTE_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("componente",26, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // componente ::= COMPONENTE_ABIERTO id3 video COMPONENTE_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("componente",26, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // componente ::= COMPONENTE_ABIERTO id3 menu COMPONENTE_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("componente",26, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // id3 ::= ID_ABIERTO IDENTIFICADOR ID_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("id3",8, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // titulo ::= TITULO_ABIERTO texto alineacion color TITULO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("titulo",1, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // titulo ::= TITULO_ABIERTO texto color TITULO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("titulo",1, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // titulo ::= TITULO_ABIERTO texto alineacion TITULO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("titulo",1, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // titulo ::= TITULO_ABIERTO texto TITULO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("titulo",1, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // texto ::= TEXTO_ABIERTO TEXTO_PARAMETRO TEXTO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("texto",27, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // color ::= COLOR_ABIERTO HEXADECIMAL_PARAMETRO COLOR_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("color",28, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // parrafo ::= PARRAFO_ABIERTO texto alineacion color PARRAFO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("parrafo",2, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // parrafo ::= PARRAFO_ABIERTO texto color PARRAFO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("parrafo",2, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // parrafo ::= PARRAFO_ABIERTO texto alineacion PARRAFO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("parrafo",2, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // parrafo ::= PARRAFO_ABIERTO texto PARRAFO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("parrafo",2, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // imagen ::= IMAGEN_ABIERTO origen alineacion altura ancho IMAGEN_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("imagen",3, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-5)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // imagen ::= IMAGEN_ABIERTO origen altura ancho IMAGEN_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("imagen",3, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // origen ::= ORIGEN_ABIERTO TEXTO_PARAMETRO ORIGEN_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("origen",29, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // alineacion ::= ALINEACION_ABIERTO alineacion1 ALINEACION_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("alineacion",30, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // alineacion1 ::= CENTRAR_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("alineacion1",31, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // alineacion1 ::= JUSTIFICAR_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("alineacion1",31, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // alineacion1 ::= DERECHA_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("alineacion1",31, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // alineacion1 ::= IZQUIERDA_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("alineacion1",31, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // altura ::= ALTURA_ABIERTO ENTERO_PARAMETRO ALTURA_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("altura",32, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // ancho ::= ANCHO_ABIERTO ENTERO_PARAMETRO ANCHO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("ancho",33, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // video ::= VIDEO_ABIERTO origen altura ancho VIDEO_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("video",4, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // menu ::= MENU_ABIERTO padre etiqueta MENU_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("menu",5, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // padre ::= PADRE_ABIERTO IDENTIFICADOR PADRE_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("padre",34, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // etiqueta ::= etiqueta etique 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("etiqueta",35, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // etiqueta ::= etique 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("etiqueta",35, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // etique ::= ETIQUETA_ABIERTO TEXTO_PARAMETRO ETIQUETA_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("etique",36, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // etiquetas ::= etiquetas etiquet 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("etiquetas",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // etiquetas ::= etiquet 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("etiquetas",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // etiquet ::= ETIQUETA_ABIERTO TEXTO_PARAMETRO ETIQUETA_CERRADO 
            {
              String RESULT =null;

              CUP$parser2$result = parser.getSymbolFactory().newSymbol("etiquet",7, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser2$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser2$do_action(
    int                        CUP$parser2$act_num,
    java_cup.runtime.lr_parser CUP$parser2$parser,
    java.util.Stack            CUP$parser2$stack,
    int                        CUP$parser2$top)
    throws java.lang.Exception
    {
              return CUP$parser2$do_action_part00000000(
                               CUP$parser2$act_num,
                               CUP$parser2$parser,
                               CUP$parser2$stack,
                               CUP$parser2$top);
    }
}

}
