
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package parrot.backend.analizadores;

import java_cup.runtime.*;
import parrot.backend.analizadores.sym1;
import parrot.backend.manejadores.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym1.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\277\000\002\002\004\000\002\002\011\000\002\002" +
    "\003\000\002\003\004\000\002\003\003\000\002\004\003" +
    "\000\002\004\003\000\002\004\003\000\002\004\003\000" +
    "\002\004\003\000\002\004\003\000\002\007\015\000\002" +
    "\015\010\000\002\016\007\000\002\016\006\000\002\017" +
    "\007\000\002\020\005\000\002\020\005\000\002\021\003" +
    "\000\002\021\003\000\002\022\003\000\002\022\003\000" +
    "\002\022\003\000\002\010\015\000\002\023\010\000\002" +
    "\023\010\000\002\024\014\000\002\011\015\000\002\025" +
    "\010\000\002\026\007\000\002\026\006\000\002\027\007" +
    "\000\002\030\005\000\002\031\003\000\002\031\003\000" +
    "\002\012\015\000\002\012\024\000\002\032\010\000\002" +
    "\033\007\000\002\033\006\000\002\034\007\000\002\035" +
    "\005\000\002\035\005\000\002\035\005\000\002\036\003" +
    "\000\002\036\003\000\002\036\003\000\002\036\003\000" +
    "\002\036\003\000\002\037\003\000\002\037\003\000\002" +
    "\040\004\000\002\040\003\000\002\041\011\000\002\013" +
    "\024\000\002\013\015\000\002\042\010\000\002\043\007" +
    "\000\002\043\006\000\002\044\007\000\002\045\005\000" +
    "\002\045\005\000\002\046\003\000\002\046\003\000\002" +
    "\014\024\000\002\014\024\000\002\014\024\000\002\014" +
    "\024\000\002\014\024\000\002\047\010\000\002\047\010" +
    "\000\002\050\004\000\002\050\004\000\002\050\005\000" +
    "\002\050\005\000\002\052\004\000\002\052\004\000\002" +
    "\073\014\000\002\071\014\000\002\072\014\000\002\051" +
    "\007\000\002\051\006\000\002\056\007\000\002\055\005" +
    "\000\002\055\005\000\002\055\005\000\002\053\003\000" +
    "\002\053\003\000\002\053\003\000\002\053\003\000\002" +
    "\054\004\000\002\054\004\000\002\054\005\000\002\054" +
    "\005\000\002\074\014\000\002\057\004\000\002\057\004" +
    "\000\002\057\005\000\002\057\005\000\002\075\014\000" +
    "\002\060\007\000\002\060\006\000\002\061\007\000\002" +
    "\062\005\000\002\062\005\000\002\062\003\000\002\063" +
    "\005\000\002\063\005\000\002\064\004\000\002\064\004" +
    "\000\002\064\005\000\002\064\005\000\002\076\014\000" +
    "\002\065\005\000\002\065\005\000\002\065\005\000\002" +
    "\065\005\000\002\065\005\000\002\065\005\000\002\100" +
    "\014\000\002\101\014\000\002\102\014\000\002\066\004" +
    "\000\002\066\004\000\002\066\005\000\002\066\005\000" +
    "\002\077\014\000\002\067\007\000\002\067\006\000\002" +
    "\070\011\000\002\070\011\000\002\005\003\000\002\005" +
    "\003\000\002\005\003\000\002\005\003\000\002\005\003" +
    "\000\002\005\003\000\002\005\003\000\002\005\003\000" +
    "\002\005\003\000\002\005\003\000\002\005\003\000\002" +
    "\005\003\000\002\005\003\000\002\005\003\000\002\005" +
    "\003\000\002\005\003\000\002\005\003\000\002\005\003" +
    "\000\002\005\003\000\002\005\003\000\002\005\003\000" +
    "\002\005\003\000\002\005\003\000\002\005\003\000\002" +
    "\005\003\000\002\005\003\000\002\005\003\000\002\005" +
    "\003\000\002\005\003\000\002\005\003\000\002\005\003" +
    "\000\002\005\003\000\002\005\003\000\002\005\003\000" +
    "\002\005\003\000\002\005\003\000\002\005\003\000\002" +
    "\005\003\000\002\005\003\000\002\005\003\000\002\005" +
    "\003\000\002\005\003\000\002\005\003\000\002\006\003" +
    "\000\002\006\003\000\002\006\003\000\002\006\003\000" +
    "\002\006\003\000\002\006\003\000\002\006\003\000\002" +
    "\006\003\000\002\006\003\000\002\006\003\000\002\006" +
    "\003\000\002\006\003\000\002\006\003\000\002\006\003" +
    "\000\002\006\003\000\002\006\003\000\002\006\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0250\000\004\046\006\001\002\000\006\002\ufff9\046" +
    "\ufff9\001\002\000\006\002\ufffa\046\ufffa\001\002\000\006" +
    "\052\u0238\054\u0237\001\002\000\004\002\u0236\001\002\000" +
    "\006\002\ufff8\046\ufff8\001\002\000\004\046\u0102\001\002" +
    "\000\004\002\uffff\001\002\000\004\046\332\001\002\000" +
    "\004\046\145\001\002\000\004\046\111\001\002\000\006" +
    "\002\ufffb\046\ufffb\001\002\000\006\002\ufffc\046\ufffc\001" +
    "\002\000\004\046\065\001\002\000\004\046\023\001\002" +
    "\000\006\002\ufff7\046\ufff7\001\002\000\004\061\024\001" +
    "\002\000\004\047\025\001\002\000\004\046\030\001\002" +
    "\000\004\046\054\001\002\000\004\046\050\001\002\000" +
    "\004\057\031\001\002\000\004\056\032\001\002\000\004" +
    "\050\033\001\002\000\014\014\040\020\043\021\041\022" +
    "\036\023\034\001\002\000\004\047\uffeb\001\002\000\004" +
    "\046\ufff2\001\002\000\004\047\uffee\001\002\000\004\047" +
    "\046\001\002\000\004\047\uffed\001\002\000\004\047\uffef" +
    "\001\002\000\004\047\044\001\002\000\004\047\uffec\001" +
    "\002\000\004\100\045\001\002\000\004\046\ufff1\001\002" +
    "\000\004\075\047\001\002\000\004\046\ufff0\001\002\000" +
    "\004\060\051\001\002\000\004\047\052\001\002\000\004" +
    "\046\ufff3\001\002\000\004\046\062\001\002\000\006\057" +
    "\031\062\055\001\002\000\004\047\056\001\002\000\004" +
    "\046\057\001\002\000\004\053\060\001\002\000\004\047" +
    "\061\001\002\000\006\002\ufff6\046\ufff6\001\002\000\004" +
    "\060\063\001\002\000\004\047\064\001\002\000\004\046" +
    "\ufff4\001\002\000\004\061\066\001\002\000\004\047\067" +
    "\001\002\000\004\046\071\001\002\000\004\046\103\001" +
    "\002\000\004\057\072\001\002\000\004\056\073\001\002" +
    "\000\004\050\074\001\002\000\004\014\075\001\002\000" +
    "\004\047\076\001\002\000\004\075\077\001\002\000\004" +
    "\046\100\001\002\000\004\060\101\001\002\000\004\047" +
    "\102\001\002\000\004\046\uffe7\001\002\000\004\062\104" +
    "\001\002\000\004\047\105\001\002\000\004\046\106\001" +
    "\002\000\004\053\107\001\002\000\004\047\110\001\002" +
    "\000\006\002\uffea\046\uffea\001\002\000\004\061\112\001" +
    "\002\000\004\047\113\001\002\000\004\046\116\001\002" +
    "\000\004\046\134\001\002\000\004\046\130\001\002\000" +
    "\004\057\117\001\002\000\004\056\120\001\002\000\004" +
    "\050\121\001\002\000\006\014\123\024\124\001\002\000" +
    "\004\047\126\001\002\000\004\047\uffe0\001\002\000\004" +
    "\047\uffdf\001\002\000\004\046\uffe2\001\002\000\004\075" +
    "\127\001\002\000\004\046\uffe1\001\002\000\004\060\131" +
    "\001\002\000\004\047\132\001\002\000\004\046\uffe3\001" +
    "\002\000\004\046\142\001\002\000\006\057\117\062\135" +
    "\001\002\000\004\047\136\001\002\000\004\046\137\001" +
    "\002\000\004\053\140\001\002\000\004\047\141\001\002" +
    "\000\006\002\uffe6\046\uffe6\001\002\000\004\060\143\001" +
    "\002\000\004\047\144\001\002\000\004\046\uffe4\001\002" +
    "\000\004\061\146\001\002\000\004\047\147\001\002\000" +
    "\004\046\152\001\002\000\004\046\224\001\002\000\004" +
    "\046\220\001\002\000\004\057\153\001\002\000\004\056" +
    "\154\001\002\000\004\050\155\001\002\000\022\014\156" +
    "\015\161\016\160\017\163\020\157\021\165\022\164\023" +
    "\170\001\002\000\004\047\uffd5\001\002\000\004\047\uffd2" +
    "\001\002\000\004\047\uffd4\001\002\000\004\047\175\001" +
    "\002\000\004\046\uffd9\001\002\000\004\047\uffd3\001\002" +
    "\000\004\047\uffcf\001\002\000\004\047\uffd0\001\002\000" +
    "\004\047\173\001\002\000\004\047\171\001\002\000\004" +
    "\047\uffd1\001\002\000\004\075\172\001\002\000\004\046" +
    "\uffd8\001\002\000\004\100\174\001\002\000\004\046\uffd6" +
    "\001\002\000\044\026\176\027\214\030\205\031\206\033" +
    "\200\042\201\043\203\044\210\045\207\052\177\053\211" +
    "\054\217\055\216\074\213\075\215\076\202\077\204\001" +
    "\002\000\004\046\uff4b\001\002\000\004\046\uff4f\001\002" +
    "\000\004\046\uff47\001\002\000\004\046\uff53\001\002\000" +
    "\004\046\uff44\001\002\000\004\046\uff52\001\002\000\004" +
    "\046\uff45\001\002\000\004\046\uff49\001\002\000\004\046" +
    "\uff48\001\002\000\004\046\uff50\001\002\000\004\046\uff51" +
    "\001\002\000\004\046\uff4e\001\002\000\004\046\uffd7\001" +
    "\002\000\004\046\uff43\001\002\000\004\046\uff4a\001\002" +
    "\000\004\046\uff46\001\002\000\004\046\uff4c\001\002\000" +
    "\004\046\uff4d\001\002\000\004\060\221\001\002\000\004" +
    "\047\222\001\002\000\004\046\uffda\001\002\000\004\046" +
    "\327\001\002\000\006\057\153\062\225\001\002\000\004" +
    "\047\226\001\002\000\004\046\227\001\002\000\006\053" +
    "\230\065\231\001\002\000\004\047\326\001\002\000\004" +
    "\047\232\001\002\000\004\046\234\001\002\000\004\046" +
    "\uffcd\001\002\000\004\063\240\001\002\000\004\046\237" +
    "\001\002\000\004\046\uffce\001\002\000\006\063\240\066" +
    "\241\001\002\000\004\073\246\001\002\000\004\047\242" +
    "\001\002\000\004\046\243\001\002\000\004\053\244\001" +
    "\002\000\004\047\245\001\002\000\006\002\uffdd\046\uffdd" +
    "\001\002\000\004\050\247\001\002\000\130\004\305\005" +
    "\277\006\270\007\252\010\323\011\315\012\272\013\311" +
    "\014\313\015\263\016\317\017\265\020\306\021\302\022" +
    "\276\023\304\024\254\025\274\032\261\034\321\035\253" +
    "\036\300\037\312\040\322\041\260\046\275\047\301\050" +
    "\262\051\273\056\257\057\320\060\271\061\266\062\255" +
    "\063\251\064\303\065\264\066\250\067\316\070\267\071" +
    "\256\072\310\102\307\001\002\000\004\101\uff55\001\002" +
    "\000\004\101\uff58\001\002\000\004\101\uff7b\001\002\000" +
    "\004\101\uff6b\001\002\000\004\101\uff6e\001\002\000\004" +
    "\101\uff5d\001\002\000\004\101\uff5a\001\002\000\004\101" +
    "\uff61\001\002\000\004\101\uff67\001\002\000\004\101\uff66" +
    "\001\002\000\004\101\uff63\001\002\000\004\101\uff75\001" +
    "\002\000\004\101\uff56\001\002\000\004\101\uff73\001\002" +
    "\000\004\101\uff5e\001\002\000\004\101\uff5b\001\002\000" +
    "\004\101\uff7c\001\002\000\004\101\uff5f\001\002\000\004" +
    "\101\uff78\001\002\000\004\101\uff62\001\002\000\004\101" +
    "\uff6d\001\002\000\004\101\uff65\001\002\000\004\101\uff70" +
    "\001\002\000\004\101\uff7d\001\002\000\004\101\uff6a\001" +
    "\002\000\004\101\uff64\001\002\000\004\101\uff71\001\002" +
    "\000\004\101\uff57\001\002\000\004\101\uff6f\001\002\000" +
    "\004\101\uff7e\001\002\000\004\101\uff72\001\002\000\004" +
    "\101\uff54\001\002\000\004\101\uff59\001\002\000\004\101" +
    "\uff77\001\002\000\004\101\uff69\001\002\000\004\101\uff76" +
    "\001\002\000\004\101\324\001\002\000\004\101\uff79\001" +
    "\002\000\004\101\uff5c\001\002\000\004\101\uff74\001\002" +
    "\000\004\101\uff60\001\002\000\004\101\uff6c\001\002\000" +
    "\004\101\uff68\001\002\000\004\101\uff7a\001\002\000\004" +
    "\047\325\001\002\000\004\046\uffcc\001\002\000\006\002" +
    "\uffde\046\uffde\001\002\000\004\060\330\001\002\000\004" +
    "\047\331\001\002\000\004\046\uffdb\001\002\000\004\061" +
    "\333\001\002\000\004\047\334\001\002\000\004\046\336" +
    "\001\002\000\004\046\377\001\002\000\004\057\342\001" +
    "\002\000\004\046\341\001\002\000\004\046\374\001\002" +
    "\000\006\057\342\062\343\001\002\000\004\056\361\001" +
    "\002\000\004\047\344\001\002\000\004\046\345\001\002" +
    "\000\006\053\346\065\347\001\002\000\004\047\360\001" +
    "\002\000\004\047\350\001\002\000\004\046\234\001\002" +
    "\000\004\046\352\001\002\000\006\063\240\066\353\001" +
    "\002\000\004\047\354\001\002\000\004\046\355\001\002" +
    "\000\004\053\356\001\002\000\004\047\357\001\002\000" +
    "\006\002\uffcb\046\uffcb\001\002\000\006\002\uffca\046\uffca" +
    "\001\002\000\004\050\362\001\002\000\010\014\366\015" +
    "\365\023\364\001\002\000\004\047\372\001\002\000\004" +
    "\047\uffc2\001\002\000\004\047\370\001\002\000\004\047" +
    "\uffc3\001\002\000\004\046\uffc6\001\002\000\044\026\176" +
    "\027\214\030\205\031\206\033\200\042\201\043\203\044" +
    "\210\045\207\052\177\053\211\054\217\055\216\074\213" +
    "\075\215\076\202\077\204\001\002\000\004\046\uffc4\001" +
    "\002\000\004\075\373\001\002\000\004\046\uffc5\001\002" +
    "\000\004\060\375\001\002\000\004\047\376\001\002\000" +
    "\004\046\uffc8\001\002\000\004\060\u0100\001\002\000\004" +
    "\047\u0101\001\002\000\004\046\uffc7\001\002\000\004\061" +
    "\u0103\001\002\000\004\047\u0104\001\002\000\004\046\u0109" +
    "\001\002\000\004\046\u0116\001\002\000\004\046\u022c\001" +
    "\002\000\004\046\u0116\001\002\000\004\046\u0116\001\002" +
    "\000\004\057\u0222\001\002\000\004\046\u01d8\001\002\000" +
    "\004\046\u01b1\001\002\000\004\046\u01a8\001\002\000\004" +
    "\046\u0196\001\002\000\004\046\u016f\001\002\000\004\046" +
    "\u0116\001\002\000\004\046\u014f\001\002\000\004\046\u0135" +
    "\001\002\000\004\046\u0116\001\002\000\004\046\uffa2\001" +
    "\002\000\004\046\u012b\001\002\000\004\046\u0127\001\002" +
    "\000\004\057\u0117\001\002\000\004\056\u0118\001\002\000" +
    "\004\050\u0119\001\002\000\006\014\u011a\024\u011b\001\002" +
    "\000\004\047\u0121\001\002\000\004\047\u011c\001\002\000" +
    "\004\075\u011d\001\002\000\004\046\u011e\001\002\000\004" +
    "\060\u011f\001\002\000\004\047\u0120\001\002\000\004\046" +
    "\uffb2\001\002\000\004\075\u0122\001\002\000\004\046\u0123" +
    "\001\002\000\004\060\u0124\001\002\000\004\047\u0125\001" +
    "\002\000\004\046\uffb3\001\002\000\004\046\uffb6\001\002" +
    "\000\004\057\u0128\001\002\000\004\056\u0129\001\002\000" +
    "\004\050\u012a\001\002\000\004\024\u011b\001\002\000\004" +
    "\057\u012d\001\002\000\004\046\uffb5\001\002\000\004\056" +
    "\u012e\001\002\000\004\050\u012f\001\002\000\004\014\u011a" +
    "\001\002\000\004\046\uffb9\001\002\000\004\046\uffa6\001" +
    "\002\000\004\046\uffa1\001\002\000\004\046\uff94\001\002" +
    "\000\004\046\uff86\001\002\000\004\057\u0136\001\002\000" +
    "\004\056\u0137\001\002\000\004\050\u0138\001\002\000\004" +
    "\025\u0139\001\002\000\004\047\u013a\001\002\000\014\026" +
    "\u013f\027\u013d\030\u013e\031\u013c\033\u013b\001\002\000\004" +
    "\046\u014c\001\002\000\004\046\u0149\001\002\000\004\046" +
    "\u0146\001\002\000\004\046\u0143\001\002\000\004\046\u0140" +
    "\001\002\000\004\060\u0141\001\002\000\004\047\u0142\001" +
    "\002\000\004\046\uffb4\001\002\000\004\060\u0144\001\002" +
    "\000\004\047\u0145\001\002\000\004\046\uff9e\001\002\000" +
    "\004\060\u0147\001\002\000\004\047\u0148\001\002\000\004" +
    "\046\uffa3\001\002\000\004\060\u014a\001\002\000\004\047" +
    "\u014b\001\002\000\004\046\uff91\001\002\000\004\060\u014d" +
    "\001\002\000\004\047\u014e\001\002\000\004\046\uff83\001" +
    "\002\000\004\062\u0150\001\002\000\004\047\u0151\001\002" +
    "\000\004\046\u0152\001\002\000\004\071\u0153\001\002\000" +
    "\004\047\u0154\001\002\000\004\046\u0157\001\002\000\004" +
    "\046\u016b\001\002\000\004\046\u0162\001\002\000\004\067" +
    "\u0158\001\002\000\004\056\u0159\001\002\000\004\050\u015a" +
    "\001\002\000\006\017\u015c\032\u015b\001\002\000\004\047" +
    "\u015f\001\002\000\004\047\u015d\001\002\000\004\075\u015e" +
    "\001\002\000\004\046\uff80\001\002\000\044\026\176\027" +
    "\214\030\205\031\206\033\200\042\201\043\203\044\210" +
    "\045\207\052\177\053\211\054\217\055\216\074\213\075" +
    "\215\076\202\077\204\001\002\000\004\046\uff7f\001\002" +
    "\000\004\046\u0168\001\002\000\006\067\u0158\072\u0163\001" +
    "\002\000\004\047\u0164\001\002\000\004\046\u0165\001\002" +
    "\000\004\053\u0166\001\002\000\004\047\u0167\001\002\000" +
    "\006\002\uffbd\046\uffbd\001\002\000\004\070\u0169\001\002" +
    "\000\004\047\u016a\001\002\000\004\046\uff82\001\002\000" +
    "\004\070\u016c\001\002\000\004\047\u016d\001\002\000\004" +
    "\046\uff81\001\002\000\004\046\uffa7\001\002\000\004\062" +
    "\u0170\001\002\000\004\047\u0171\001\002\000\004\046\u0172" +
    "\001\002\000\004\071\u0173\001\002\000\004\047\u0174\001" +
    "\002\000\004\046\u0177\001\002\000\004\046\u018d\001\002" +
    "\000\004\046\u0189\001\002\000\004\067\u0178\001\002\000" +
    "\004\056\u0179\001\002\000\004\050\u017a\001\002\000\010" +
    "\034\u017b\035\u017d\036\u017c\001\002\000\004\047\u0187\001" +
    "\002\000\004\047\u0185\001\002\000\004\047\u017f\001\002" +
    "\000\004\046\uffaf\001\002\000\012\042\u0182\043\u0184\044" +
    "\u0181\045\u0183\001\002\000\004\046\uffad\001\002\000\004" +
    "\046\uffa9\001\002\000\004\046\uffab\001\002\000\004\046" +
    "\uffa8\001\002\000\004\046\uffaa\001\002\000\004\074\u0186" +
    "\001\002\000\004\046\uffac\001\002\000\044\026\176\027" +
    "\214\030\205\031\206\033\200\042\201\043\203\044\210" +
    "\045\207\052\177\053\211\054\217\055\216\074\213\075" +
    "\215\076\202\077\204\001\002\000\004\046\uffae\001\002" +
    "\000\004\070\u018a\001\002\000\004\047\u018b\001\002\000" +
    "\004\046\uffb0\001\002\000\004\046\u0193\001\002\000\006" +
    "\067\u0178\072\u018e\001\002\000\004\047\u018f\001\002\000" +
    "\004\046\u0190\001\002\000\004\053\u0191\001\002\000\004" +
    "\047\u0192\001\002\000\006\002\uffc1\046\uffc1\001\002\000" +
    "\004\070\u0194\001\002\000\004\047\u0195\001\002\000\004" +
    "\046\uffb1\001\002\000\004\062\u0197\001\002\000\004\047" +
    "\u0198\001\002\000\004\046\u0199\001\002\000\004\071\u019a" +
    "\001\002\000\004\047\u019b\001\002\000\004\046\u0177\001" +
    "\002\000\004\046\u019d\001\002\000\006\067\u0178\072\u019e" +
    "\001\002\000\004\047\u019f\001\002\000\004\046\u01a0\001" +
    "\002\000\004\053\u01a1\001\002\000\004\047\u01a2\001\002" +
    "\000\006\002\uffc0\046\uffc0\001\002\000\004\046\u012b\001" +
    "\002\000\004\046\u012b\001\002\000\004\046\u012b\001\002" +
    "\000\004\046\u012b\001\002\000\004\046\u012b\001\002\000" +
    "\004\057\u01a9\001\002\000\004\056\u01aa\001\002\000\004" +
    "\050\u01ab\001\002\000\006\014\u011a\025\u0139\001\002\000" +
    "\004\046\uff84\001\002\000\004\046\uff92\001\002\000\004" +
    "\046\uff9f\001\002\000\004\046\uffa4\001\002\000\004\046" +
    "\uffb7\001\002\000\004\062\u01b2\001\002\000\004\047\u01b3" +
    "\001\002\000\004\046\u01b4\001\002\000\004\071\u01b5\001" +
    "\002\000\004\047\u01b6\001\002\000\004\046\u01b8\001\002" +
    "\000\004\046\u01d5\001\002\000\004\067\u01bc\001\002\000" +
    "\004\046\u01bb\001\002\000\004\046\u01d2\001\002\000\006" +
    "\067\u01bc\072\u01bd\001\002\000\004\056\u01c2\001\002\000" +
    "\004\047\u01be\001\002\000\004\046\u01bf\001\002\000\004" +
    "\053\u01c0\001\002\000\004\047\u01c1\001\002\000\006\002" +
    "\uffbf\046\uffbf\001\002\000\004\050\u01c3\001\002\000\012" +
    "\035\u01c4\037\u01c6\040\u01c8\041\u01c9\001\002\000\004\047" +
    "\u01d0\001\002\000\004\046\uff98\001\002\000\004\047\u01ce" +
    "\001\002\000\004\046\uff9b\001\002\000\004\047\u01cc\001" +
    "\002\000\004\047\u01ca\001\002\000\004\076\u01cb\001\002" +
    "\000\004\046\uff96\001\002\000\004\076\u01cd\001\002\000" +
    "\004\046\uff97\001\002\000\044\026\176\027\214\030\205" +
    "\031\206\033\200\042\201\043\203\044\210\045\207\052" +
    "\177\053\211\054\217\055\216\074\213\075\215\076\202" +
    "\077\204\001\002\000\004\046\uff9a\001\002\000\012\042" +
    "\u0182\043\u0184\044\u0181\045\u0183\001\002\000\004\046\uff99" +
    "\001\002\000\004\070\u01d3\001\002\000\004\047\u01d4\001" +
    "\002\000\004\046\uff9d\001\002\000\004\070\u01d6\001\002" +
    "\000\004\047\u01d7\001\002\000\004\046\uff9c\001\002\000" +
    "\004\062\u01d9\001\002\000\004\047\u01da\001\002\000\004" +
    "\046\u01db\001\002\000\004\071\u01dc\001\002\000\004\047" +
    "\u01dd\001\002\000\004\046\u01e2\001\002\000\004\046\u021c" +
    "\001\002\000\004\046\u020f\001\002\000\004\046\u0208\001" +
    "\002\000\004\046\u01fa\001\002\000\004\067\u01e3\001\002" +
    "\000\004\056\u01e4\001\002\000\004\050\u01e5\001\002\000" +
    "\010\037\u01e6\040\u01e8\041\u01e7\001\002\000\004\047\u01f3" +
    "\001\002\000\004\047\u01ee\001\002\000\004\047\u01e9\001" +
    "\002\000\004\076\u01ea\001\002\000\004\046\u01eb\001\002" +
    "\000\004\070\u01ec\001\002\000\004\047\u01ed\001\002\000" +
    "\004\046\uff8a\001\002\000\004\076\u01ef\001\002\000\004" +
    "\046\u01f0\001\002\000\004\070\u01f1\001\002\000\004\047" +
    "\u01f2\001\002\000\004\046\uff89\001\002\000\044\026\176" +
    "\027\214\030\205\031\206\033\200\042\201\043\203\044" +
    "\210\045\207\052\177\053\211\054\217\055\216\074\213" +
    "\075\215\076\202\077\204\001\002\000\004\046\u01f5\001" +
    "\002\000\004\070\u01f6\001\002\000\004\047\u01f7\001\002" +
    "\000\004\046\uff88\001\002\000\004\046\u0204\001\002\000" +
    "\004\046\u01ff\001\002\000\004\067\u01fb\001\002\000\004" +
    "\056\u01fc\001\002\000\004\050\u01fd\001\002\000\006\037" +
    "\u01e6\041\u01e7\001\002\000\004\046\uff8f\001\002\000\004" +
    "\067\u0200\001\002\000\004\056\u0201\001\002\000\004\050" +
    "\u0202\001\002\000\004\037\u01e6\001\002\000\004\046\uff8b" +
    "\001\002\000\004\067\u0205\001\002\000\004\056\u0206\001" +
    "\002\000\004\050\u0207\001\002\000\004\041\u01e7\001\002" +
    "\000\004\072\u0209\001\002\000\004\047\u020a\001\002\000" +
    "\004\046\u020b\001\002\000\004\053\u020c\001\002\000\004" +
    "\047\u020d\001\002\000\006\002\uffbe\046\uffbe\001\002\000" +
    "\004\046\u0216\001\002\000\004\067\u0212\001\002\000\004" +
    "\046\u01ff\001\002\000\004\046\uff8c\001\002\000\004\056" +
    "\u0213\001\002\000\004\050\u0214\001\002\000\006\037\u01e6" +
    "\040\u01e8\001\002\000\004\046\uff8e\001\002\000\004\067" +
    "\u0217\001\002\000\004\056\u0218\001\002\000\004\050\u0219" +
    "\001\002\000\004\040\u01e8\001\002\000\004\046\u0216\001" +
    "\002\000\004\046\u0204\001\002\000\004\067\u021d\001\002" +
    "\000\004\056\u021e\001\002\000\004\050\u021f\001\002\000" +
    "\006\040\u01e8\041\u01e7\001\002\000\004\046\uff90\001\002" +
    "\000\004\046\uff8d\001\002\000\004\056\u0223\001\002\000" +
    "\004\050\u0224\001\002\000\010\014\u011a\024\u011b\025\u0139" +
    "\001\002\000\004\046\uffba\001\002\000\004\046\uff87\001" +
    "\002\000\004\046\u0127\001\002\000\004\046\u0127\001\002" +
    "\000\004\046\u0127\001\002\000\004\046\u0127\001\002\000" +
    "\004\046\u0127\001\002\000\004\057\u022d\001\002\000\004" +
    "\056\u022e\001\002\000\004\050\u022f\001\002\000\006\024" +
    "\u011b\025\u0139\001\002\000\004\046\uff85\001\002\000\004" +
    "\046\uff93\001\002\000\004\046\uffa0\001\002\000\004\046" +
    "\uffa5\001\002\000\004\046\uffb8\001\002\000\004\046\uff95" +
    "\001\002\000\004\002\001\001\002\000\004\047\u024b\001" +
    "\002\000\004\056\u0239\001\002\000\004\050\u023a\001\002" +
    "\000\022\004\u0240\005\u023f\006\u023e\007\u0241\010\u023c\011" +
    "\u0242\012\u023b\013\u023d\001\002\000\004\047\u024a\001\002" +
    "\000\004\047\u0249\001\002\000\004\047\u0248\001\002\000" +
    "\004\047\u0247\001\002\000\004\047\u0246\001\002\000\004" +
    "\047\u0245\001\002\000\004\047\u0244\001\002\000\004\047" +
    "\u0243\001\002\000\004\046\uffbc\001\002\000\004\046\uffe8" +
    "\001\002\000\004\046\ufff5\001\002\000\004\046\uffe9\001" +
    "\002\000\004\046\uffdc\001\002\000\004\046\uffbb\001\002" +
    "\000\004\046\uffc9\001\002\000\004\046\uffe5\001\002\000" +
    "\004\046\u024c\001\002\000\004\052\u0238\001\002\000\004" +
    "\046\ufffd\001\002\000\004\046\u024f\001\002\000\006\052" +
    "\u0238\055\u0251\001\002\000\004\046\ufffe\001\002\000\004" +
    "\047\u0252\001\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0250\000\036\002\006\004\011\007\016\010\015\011" +
    "\004\012\003\013\007\014\021\015\020\023\017\025\014" +
    "\032\013\042\012\047\010\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\016\025\017\026\001\001\000\004\017\052\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\020\034\021\041\022\036\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\024\067\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\026\113\027\114" +
    "\001\001\000\004\027\132\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\030\124\031\121\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\033\147\034\150\001\001\000\004\034\222\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\035\161\036\166\037\165\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\006\211\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\040\234" +
    "\041\232\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\041\235\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\005\313\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\043\336\044" +
    "\334\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\044\337\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\040" +
    "\350\041\232\001\001\000\004\041\235\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\045\366\046\362\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\006\370\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\034\050\u010d\052\u0110\054\u010c\057" +
    "\u010a\064\u0109\066\u010f\071\u0105\072\u010b\073\u0107\074\u010e" +
    "\075\u0111\076\u0104\077\u0106\001\001\000\010\052\u0234\071" +
    "\u0114\072\u0113\001\001\000\016\072\u0125\073\u0226\074\u0227" +
    "\075\u0228\076\u0229\077\u022a\001\001\000\010\052\u0225\071" +
    "\u0114\072\u0113\001\001\000\010\052\u0224\071\u0114\072\u0113" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\016\071\u012b\073\u01a2\074\u01a3\075\u01a4\076\u01a5" +
    "\077\u01a6\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\052\u016d\071\u0114\072\u0113\001\001\000\002\001\001" +
    "\000\014\073\u012f\074\u0130\075\u0131\076\u0132\077\u0133\001" +
    "\001\000\010\052\u0112\071\u0114\072\u0113\001\001\000\002" +
    "\001\001\000\004\071\u012b\001\001\000\004\072\u0125\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\067\u0155\070\u0154\001\001\000\002\001" +
    "\001\000\004\070\u0160\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\006\u015f\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\051\u0174\056" +
    "\u0175\001\001\000\004\056\u018b\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\055\u017d\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\053\u017f\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\006\u0187\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\051\u019b\056\u0175" +
    "\001\001\000\004\056\u018b\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\071\u01af\001\001\000" +
    "\004\071\u01ae\001\001\000\004\071\u01ad\001\001\000\004" +
    "\071\u01ac\001\001\000\004\071\u01ab\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\060\u01b8\061\u01b6\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\061\u01b9\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\062\u01c6\063\u01c4" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\006\u01ce\001\001\000\002\001\001" +
    "\000\004\053\u01d0\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\065\u01df\100\u01e0\101\u01de\102\u01dd\001" +
    "\001\000\006\100\u021a\101\u0219\001\001\000\006\100\u020f" +
    "\102\u020d\001\001\000\002\001\001\000\006\101\u01f8\102" +
    "\u01f7\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\006\u01f3\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\101\u0202\001\001\000\004\102\u01fd\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\100\u0214\001\001\000\002\001\001" +
    "\000\004\102\u0210\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\100\u0220\001\001\000\004\101\u021f" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\072\u0233\001\001" +
    "\000\004\072\u0232\001\001\000\004\072\u0231\001\001\000" +
    "\004\072\u0230\001\001\000\004\072\u022f\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\036\003\u024d\004\u024c\007\016" +
    "\010\015\011\004\012\003\013\007\014\021\015\020\023" +
    "\017\025\014\032\013\042\012\047\010\001\001\000\002" +
    "\001\001\000\002\001\001\000\034\004\u024f\007\016\010" +
    "\015\011\004\012\003\013\007\014\021\015\020\023\017" +
    "\025\014\032\013\042\012\047\010\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




	private ManejadorParser mp = null;
	private int agregar = 1;
	private int clase = 0;
	private int internalOption = 0;

	// Connect this parser to a scanner!
	public parser(Lexer1 lex, ManejadorParser mp) {
		super(lex);
		this.mp = mp;
	}

        public void syntax_error(Symbol s) {
        	this.mp.showErrorMessege("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
            System.out.println("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
        }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= main EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String start_val = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // main ::= SIGNO_MENOR ACCIONES_ABIERTO SIGNO_MAYOR main2 SIGNO_MENOR ACCIONES_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // main ::= main3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // main2 ::= main2 main3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main2",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // main2 ::= main3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main2",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // main3 ::= crearSitio 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // main3 ::= borrarSitioPagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // main3 ::= borrarComponente 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // main3 ::= nuevaPagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // main3 ::= modificarPagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // main3 ::= agregarComponente 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("main3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // crearSitio ::= accion1 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro1 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("crearSitio",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // accion1 ::= SIGNO_MENOR ACCION_ABIERTO NOMBRE SIGNO_IGUAL NUEVO_SITIO_WEB SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion1",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // parametro1 ::= parametro1 param1 SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro1",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // parametro1 ::= param1 SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro1",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // param1 ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL opcion1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("param1",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // opcion1 ::= op1 SIGNO_MAYOR FECHA_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion1",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // opcion1 ::= op2 SIGNO_MAYOR IDENTIFICADOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion1",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // op1 ::= FECHA_CREACION 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op1",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // op1 ::= FECHA_MODIFICACION 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op1",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // op2 ::= ID_TEXTO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op2",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // op2 ::= USUARIO_CREACION 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op2",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // op2 ::= USUARIO_MODIFICACION 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op2",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // borrarSitioPagina ::= accion2 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro2 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("borrarSitioPagina",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // accion2 ::= SIGNO_MENOR ACCION_ABIERTO NOMBRE SIGNO_IGUAL BORRAR_SITIO_WEB SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion2",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // accion2 ::= SIGNO_MENOR ACCION_ABIERTO NOMBRE SIGNO_IGUAL BORRAR_PAGINA SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion2",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // parametro2 ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL ID_TEXTO SIGNO_MAYOR IDENTIFICADOR SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro2",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // borrarComponente ::= accion3 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro3 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("borrarComponente",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // accion3 ::= SIGNO_MENOR ACCION_ABIERTO NOMBRE SIGNO_IGUAL BORRAR_COMPONENTE SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion3",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // parametro3 ::= parametro3 param2 SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro3",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // parametro3 ::= param2 SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro3",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // param2 ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL opcion2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("param2",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // opcion2 ::= op3 SIGNO_MAYOR IDENTIFICADOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion2",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // op3 ::= ID_TEXTO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op3",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // op3 ::= PAGINA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op3",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // nuevaPagina ::= accion4 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro4 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("nuevaPagina",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // nuevaPagina ::= accion4 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro4 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ETIQUETAS_ABIERTO SIGNO_MAYOR etiqueta1 SIGNO_MENOR ETIQUETAS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("nuevaPagina",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // accion4 ::= SIGNO_MENOR ACCION_ABIERTO NOMBRE SIGNO_IGUAL NUEVA_PAGINA SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion4",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // parametro4 ::= parametro4 param3 SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro4",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // parametro4 ::= param3 SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro4",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // param3 ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL opcion3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("param3",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // opcion3 ::= op4 SIGNO_MAYOR IDENTIFICADOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion3",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // opcion3 ::= TITULO SIGNO_MAYOR paraReservado 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion3",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // opcion3 ::= op5 SIGNO_MAYOR FECHA_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion3",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // op4 ::= ID_TEXTO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op4",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // op4 ::= SITIO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op4",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // op4 ::= PADRE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op4",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // op4 ::= USUARIO_CREACION 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op4",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // op4 ::= USUARIO_MODIFICACION 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op4",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // op5 ::= FECHA_CREACION 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op5",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // op5 ::= FECHA_MODIFICACION 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op5",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // etiqueta1 ::= etiqueta1 etique1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("etiqueta1",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // etiqueta1 ::= etique1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("etiqueta1",30, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // etique1 ::= SIGNO_MENOR ETIQUETA_ABIERTO VALOR SIGNO_IGUAL palabraRes SLASH SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("etique1",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // modificarPagina ::= accion5 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro5 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ETIQUETAS_ABIERTO SIGNO_MAYOR etiqueta1 SIGNO_MENOR ETIQUETAS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("modificarPagina",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // modificarPagina ::= accion5 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro5 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("modificarPagina",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // accion5 ::= SIGNO_MENOR ACCION_ABIERTO NOMBRE SIGNO_IGUAL MODIFICAR_PAGINA SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion5",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // parametro5 ::= parametro5 param4 SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro5",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // parametro5 ::= param4 SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro5",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // param4 ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL opcion4 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("param4",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // opcion4 ::= op6 SIGNO_MAYOR IDENTIFICADOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion4",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // opcion4 ::= TITULO SIGNO_MAYOR paraReservado 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion4",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // op6 ::= ID_TEXTO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op6",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // op6 ::= USUARIO_MODIFICACION 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("op6",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // agregarComponente ::= accion6 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro6 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ATRIBUTOS_ABIERTO SIGNO_MAYOR atributo1 SIGNO_MENOR ATRIBUTOS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("agregarComponente",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // agregarComponente ::= accion6 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro7 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ATRIBUTOS_ABIERTO SIGNO_MAYOR atributo1 SIGNO_MENOR ATRIBUTOS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("agregarComponente",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // agregarComponente ::= accion6 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro8 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ATRIBUTOS_ABIERTO SIGNO_MAYOR atributo2 SIGNO_MENOR ATRIBUTOS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("agregarComponente",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // agregarComponente ::= accion6 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro9 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ATRIBUTOS_ABIERTO SIGNO_MAYOR atributo3 SIGNO_MENOR ATRIBUTOS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("agregarComponente",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // agregarComponente ::= accion6 SIGNO_MENOR PARAMETROS_ABIERTO SIGNO_MAYOR parametro10 SIGNO_MENOR PARAMETROS_CERRADO SIGNO_MAYOR SIGNO_MENOR ATRIBUTOS_ABIERTO SIGNO_MAYOR atributo4 SIGNO_MENOR ATRIBUTOS_CERRADO SIGNO_MAYOR SIGNO_MENOR ACCION_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("agregarComponente",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-17)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // accion6 ::= SIGNO_MENOR ACCION_ABIERTO NOMBRE SIGNO_IGUAL AGREGAR_COMPONENTE SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion6",37, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // accion6 ::= SIGNO_MENOR ACCION_ABIERTO NOMBRE SIGNO_IGUAL MODIFICAR_COMPONENTE SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion6",37, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // parametro6 ::= titulo idPagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro6",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // parametro6 ::= idPagina titulo 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro6",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // parametro6 ::= id titulo pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro6",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // parametro6 ::= pagina titulo id 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro6",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // idPagina ::= id pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("idPagina",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // idPagina ::= pagina id 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("idPagina",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // titulo ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL CLASE SIGNO_MAYOR TITULO_PARAMETRO SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("titulo",57, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // id ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL ID_TEXTO SIGNO_MAYOR IDENTIFICADOR SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("id",55, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // pagina ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL PAGINA SIGNO_MAYOR IDENTIFICADOR SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("pagina",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // atributo1 ::= atributo1 atrib1 SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo1",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // atributo1 ::= atrib1 SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo1",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // atrib1 ::= SIGNO_MENOR ATRIBUTO_ABIERTO NOMBRE SIGNO_IGUAL opcion6 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atrib1",44, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // opcion6 ::= TEXTO SIGNO_MAYOR paraReservado 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion6",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // opcion6 ::= ALINEACION SIGNO_MAYOR alineacion 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion6",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // opcion6 ::= COLOR SIGNO_MAYOR HEXADECIMAL_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion6",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // alineacion ::= CENTRAR_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alineacion",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // alineacion ::= IZQUIERDA_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alineacion",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // alineacion ::= DERECHA_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alineacion",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // alineacion ::= JUSTIFICAR_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("alineacion",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // parametro7 ::= parrafo idPagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro7",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // parametro7 ::= idPagina parrafo 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro7",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // parametro7 ::= id parrafo pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro7",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // parametro7 ::= pagina parrafo id 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro7",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // parrafo ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL CLASE SIGNO_MAYOR PARRAFO_PARAMETRO SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parrafo",58, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // parametro8 ::= imagen idPagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro8",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // parametro8 ::= idPagina imagen 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro8",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // parametro8 ::= id imagen pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro8",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // parametro8 ::= pagina imagen id 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro8",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // imagen ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL CLASE SIGNO_MAYOR IMAGEN_PARAMETRO SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("imagen",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // atributo2 ::= atributo2 atrib2 SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo2",46, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // atributo2 ::= atrib2 SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo2",46, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // atrib2 ::= SIGNO_MENOR ATRIBUTO_ABIERTO NOMBRE SIGNO_IGUAL opcion7 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atrib2",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // opcion7 ::= ORIGEN SIGNO_MAYOR paraReservado 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion7",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // opcion7 ::= ALINEACION SIGNO_MAYOR alineacion 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion7",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // opcion7 ::= tamano 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion7",48, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // tamano ::= ALTURA SIGNO_MAYOR ENTERO_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tamano",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // tamano ::= ANCHO SIGNO_MAYOR ENTERO_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tamano",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // parametro9 ::= video idPagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro9",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // parametro9 ::= idPagina video 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro9",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // parametro9 ::= id video pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro9",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // parametro9 ::= pagina video id 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro9",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // video ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL CLASE SIGNO_MAYOR VIDEO_PARAMETRO SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("video",60, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // atributo3 ::= origen altura ancho 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo3",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // atributo3 ::= altura ancho origen 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo3",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // atributo3 ::= ancho origen altura 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo3",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // atributo3 ::= origen ancho altura 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo3",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // atributo3 ::= ancho altura origen 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo3",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // atributo3 ::= altura origen ancho 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo3",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // altura ::= SIGNO_MENOR ATRIBUTO_ABIERTO NOMBRE SIGNO_IGUAL ALTURA SIGNO_MAYOR ENTERO_PARAMETRO SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("altura",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // ancho ::= SIGNO_MENOR ATRIBUTO_ABIERTO NOMBRE SIGNO_IGUAL ANCHO SIGNO_MAYOR ENTERO_PARAMETRO SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ancho",63, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // origen ::= SIGNO_MENOR ATRIBUTO_ABIERTO NOMBRE SIGNO_IGUAL ORIGEN SIGNO_MAYOR paraReservado SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("origen",64, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // parametro10 ::= menu idPagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro10",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // parametro10 ::= idPagina menu 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro10",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // parametro10 ::= id menu pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro10",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // parametro10 ::= pagina menu id 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro10",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // menu ::= SIGNO_MENOR PARAMETRO_ABIERTO NOMBRE SIGNO_IGUAL CLASE SIGNO_MAYOR MENU_PARAMETRO SIGNO_MENOR PARAMETRO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("menu",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // atributo4 ::= atributo4 atrib4 SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo4",53, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // atributo4 ::= atrib4 SIGNO_MENOR ATRIBUTO_CERRADO SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo4",53, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // atrib4 ::= SIGNO_MENOR ATRIBUTO_ABIERTO NOMBRE SIGNO_IGUAL PADRE SIGNO_MAYOR IDENTIFICADOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atrib4",54, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // atrib4 ::= SIGNO_MENOR ATRIBUTO_ABIERTO NOMBRE SIGNO_IGUAL ETIQUETAS SIGNO_MAYOR paraReservado 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atrib4",54, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // palabraRes ::= NUEVO_SITIO_WEB 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // palabraRes ::= BORRAR_SITIO_WEB 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // palabraRes ::= NUEVA_PAGINA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // palabraRes ::= BORRAR_PAGINA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // palabraRes ::= MODIFICAR_PAGINA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // palabraRes ::= AGREGAR_COMPONENTE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // palabraRes ::= BORRAR_COMPONENTE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // palabraRes ::= MODIFICAR_COMPONENTE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // palabraRes ::= ID_TEXTO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // palabraRes ::= TITULO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // palabraRes ::= SITIO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // palabraRes ::= PADRE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // palabraRes ::= USUARIO_CREACION 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // palabraRes ::= FECHA_CREACION 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // palabraRes ::= FECHA_MODIFICACION 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // palabraRes ::= USUARIO_MODIFICACION 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // palabraRes ::= PAGINA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // palabraRes ::= CLASE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // palabraRes ::= TEXTO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // palabraRes ::= ALINEACION 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // palabraRes ::= COLOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // palabraRes ::= ORIGEN 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // palabraRes ::= ALTURA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // palabraRes ::= ANCHO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // palabraRes ::= ETIQUETAS 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // palabraRes ::= SIGNO_MENOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // palabraRes ::= SIGNO_MAYOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // palabraRes ::= SIGNO_IGUAL 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // palabraRes ::= COMILLAS 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // palabraRes ::= NOMBRE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // palabraRes ::= PARAMETRO_ABIERTO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // palabraRes ::= PARAMETRO_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // palabraRes ::= PARAMETROS_ABIERTO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // palabraRes ::= PARAMETROS_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // palabraRes ::= ATRIBUTO_ABIERTO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // palabraRes ::= ATRIBUTO_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // palabraRes ::= ATRIBUTOS_ABIERTO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // palabraRes ::= ATRIBUTOS_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // palabraRes ::= ETIQUETA_ABIERTO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // palabraRes ::= ETIQUETA_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // palabraRes ::= ETIQUETAS_ABIERTO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // palabraRes ::= ETIQUETAS_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // palabraRes ::= TEXTO_STRING 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabraRes",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // paraReservado ::= CENTRAR_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // paraReservado ::= IZQUIERDA_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // paraReservado ::= DERECHA_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // paraReservado ::= JUSTIFICAR_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // paraReservado ::= ACCION_ABIERTO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // paraReservado ::= ACCION_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // paraReservado ::= ACCIONES_ABIERTO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // paraReservado ::= ACCIONES_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // paraReservado ::= TITULO_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // paraReservado ::= PARRAFO_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // paraReservado ::= IMAGEN_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // paraReservado ::= VIDEO_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // paraReservado ::= MENU_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // paraReservado ::= IDENTIFICADOR 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // paraReservado ::= TEXTO_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // paraReservado ::= ENTERO_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // paraReservado ::= HEXADECIMAL_PARAMETRO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paraReservado",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
